(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{426:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"组件化理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化理解"}},[e._v("#")]),e._v(" 组件化理解")]),e._v(" "),a("p",[e._v("[TOC]")]),e._v(" "),a("h2",{attrs:{id:"一、架构设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、架构设计原则"}},[e._v("#")]),e._v(" 一、架构设计原则")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("整体原则")])]),e._v(" "),a("p",[e._v("架构服务于业务，随业务的发展而演进，以提升业务效率和体验为目标。")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("业务原则")])]),e._v(" "),a("ol",[a("li",[e._v("稳定性和可维护性；")]),e._v(" "),a("li",[e._v("与业务形态和组件架构契合；")]),e._v(" "),a("li",[e._v("成本可控(切记憋大招，多次小规模架构演进达到目标)；")])])])]),e._v(" "),a("h2",{attrs:{id:"二、组件化理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、组件化理解"}},[e._v("#")]),e._v(" 二、组件化理解")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("why")]),e._v(" "),a("p",[e._v("如果项目比较小，普通的 单工程+MVC架构就可以满足大部分需求了。")]),e._v(" "),a("p",[e._v("当一个项目越来越大，开发人员越来越多，项目会遇到很多问题：")]),e._v(" "),a("ul",[a("li",[e._v("业务模块间划分不清晰，模块之间耦合很大，非常难维护；")]),e._v(" "),a("li",[e._v("所有模块代码写在一个项目中，测试或打包时，需要编译整个项目；")])])]),e._v(" "),a("li",[a("p",[e._v("what")]),e._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/meituan_component.png"}}),e._v(" "),a("ul",[a("li",[a("p",[e._v("宿主层")]),e._v(" "),a("p",[e._v("可以包含多个宿主，对外提供apk。用于Application的初始化、dex加载和其他组件或功能的初始化。")])]),e._v(" "),a("li",[a("p",[e._v("业务组件层")]),e._v(" "),a("p",[e._v("包含多个可以独立运行的业务组件，可以单独编译、独立打包、独立测试。")])]),e._v(" "),a("li",[a("p",[e._v("平台层")]),e._v(" "),a("p",[e._v("包括组件间数据通信和页面跳转、核心业务、基础能力：网络、图片等。")])])])]),e._v(" "),a("li",[a("p",[e._v("how")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("宿主和业务组件如何单独编译运行？")]),e._v(" "),a("p",[e._v("在gradle配置文件添加运行模式属性标识，动态改变业务组件属性(application或library)，通过SourceSets判断选择对应的清单文件。")])]),e._v(" "),a("li",[a("p",[e._v("Manifest冲突解决？")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("gradle minSdkVersion冲突(第三方库)： "),a("code",[e._v('<uses-sdk tools:overrideLibrary="com.lib"/>')])])]),e._v(" "),a("li",[a("p",[e._v("清单文件 icon/theme/lable冲突："),a("code",[e._v('tools:replace="android:icon,android:label,android:theme"')])])]),e._v(" "),a("li",[a("p",[e._v("第三方库不支持横竖屏：")])])]),e._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("二维码扫描界面 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" zxing"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("embedded"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("activity\n     android"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"com.journeyapps.barcodescanner.CaptureActivity"')]),e._v("\n     android"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("screenOrientation"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"portrait"')]),e._v("\n     tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("replace"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"screenOrientation"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("重复依赖相同库或组件当版本不一致问题？")]),e._v(" "),a("ol",[a("li",[e._v("统一使用config.gradle管理所有依赖包；")]),e._v(" "),a("li",[e._v("我们还可以用Gradle的 exclude group 将指定的包名排除到编译范围外(两个第三方库库引用了不同版本的相同包)：")])]),e._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//bmob-sdk：Bmob的android sdk包，包含了Bmob的数据存储、文件等服务，以下是最新的bmob-sdk:")]),e._v("\n   implementation "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'cn.bmob.android:bmob-sdk:3.5.5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// gson-2.6.2")]),e._v("\n        exclude group"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'com.squareup.okhttp3'")]),e._v("\n        exclude group"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'com.squareup.okio'")]),e._v("\n        exclude group"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'com.google.code.gson'")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//        exclude(module: 'gson')     // 防止版本冲突")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("组件之间相互跳转？")]),e._v(" "),a("p",[e._v("Arouter实现；自定义路由；")])]),e._v(" "),a("li",[a("p",[e._v("组件间如何通信？")]),e._v(" "),a("p",[e._v("接口+实现方式(反射获取实例对象)；")]),e._v(" "),a("p",[e._v("事件总线(类似EventBus)；")]),e._v(" "),a("p",[e._v("Arouter IProvider实现 "),a("code",[e._v("IHomeService homeService = ARouter.getInstance().navigation(IHomeService.class);")]),e._v(";")])]),e._v(" "),a("li",[a("p",[e._v("代码、资源文件如何隔离？")]),e._v(" "),a("p",[e._v("防止代码直接引用组件： "),a("code",[e._v("宿主使用：runtimeOnly project(path: ':c_login')")])]),e._v(" "),a("p",[e._v("xml文件通过 "),a("code",[e._v('resourcePrefix "login_"')]),e._v(" 隔离；")]),e._v(" "),a("p",[e._v("图片需要手动限制隔离；")])])])]),e._v(" "),a("li",[a("p",[e._v("需要考虑的问题？")])])]),e._v(" "),a("ul",[a("li",[e._v("组件化和模块化区别？")])]),e._v(" "),a("p",[a("code",[e._v("A component is a similar concept, but typically refer to a high level; a component is a pieceof a whole system, while a module is a piece of an individual program.")])]),e._v(" "),a("p",[e._v("组件化和模块化是相似的，目的都是封装内聚、解耦复用；")]),e._v(" "),a("p",[e._v("组件是可以单独运行的，作为系统的一部分，模块是应用程序中一个类或多个类的集合；")]),e._v(" "),a("p",[e._v("组件侧重于对外，提供接口统一访问；模块侧重于内聚，不同模块没有明确界限；")]),e._v(" "),a("p",[e._v("一个组件可以包含多个模块实现。")]),e._v(" "),a("h2",{attrs:{id:"三、插件化理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、插件化理解"}},[e._v("#")]),e._v(" 三、插件化理解")]),e._v(" "),a("h2",{attrs:{id:"四、热修复理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、热修复理解"}},[e._v("#")]),e._v(" 四、热修复理解")]),e._v(" "),a("h2",{attrs:{id:"五、app架构的关注点有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、app架构的关注点有哪些"}},[e._v("#")]),e._v(" 五、APP架构的关注点有哪些？")]),e._v(" "),a("p",[e._v("​\t业界有一些做得比较好的产品，也是我们参考的对象，毕竟技术领域尽量要避免重复造轮子。像微信、支付宝、美团等超级 App 的架构演进我们也会去学习了解，吸取别人的经验。")]),e._v(" "),a("p",[e._v("关注点这里，会关注("),a("strong",[e._v("组件化、插件化、动态迭代、代码多端复用")]),e._v(")：")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("模块 / 组件划分、分层的策略和维度；")])]),e._v(" "),a("li",[a("p",[e._v("模块 / 组件间通信方案；")])]),e._v(" "),a("li",[a("p",[e._v("架构演进中遇到的问题；")])]),e._v(" "),a("li",[a("p",[e._v("架构演进过程中使用的工具；")])]),e._v(" "),a("li",[a("p",[e._v("防劣化机制；")])]),e._v(" "),a("li",[a("p",[e._v("架构演进和业务迭代的合作模式；")])]),e._v(" "),a("li",[a("p",[e._v("后续架构演进的方向。")])])]),e._v(" "),a("ul",[a("li",[e._v("参考")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/e_QmHNOOhplKzIz1MXn08g",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. 头条"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_30359021/article/details/95141665",target:"_blank",rel:"noopener noreferrer"}},[e._v("2. 组件和模块区别"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.liyisite.com/article/12/android-xiang-mu-mo-kuai-hua-zu-jian-hua-de-jia-gou-zhi-lu-yi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("3. 文章"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA%3D%3D&mid=2650662653&idx=1&sn=e15a36e4460eb3d1890d92aa921c0962&scene=45#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("4. 安居客架构演进"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU4ODM2MjczNA==&mid=2247483732&idx=1&sn=b7ee1151b2c8ad2e997b8db39adf3267&chksm=fddca7d5caab2ec33905cc3350f31c0c98794774b0d04a01845565e3989b1f20205c7f432cb9&scene=38#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("5. 安居客模块化组件化"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://tech.meituan.com/2018/03/16/meituan-food-delivery-android-architecture-evolution.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("6. 美团技术文章列表-平台化架构演进"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://my.oschina.net/u/1183665/blog/523957",target:"_blank",rel:"noopener noreferrer"}},[e._v("7. 后台-基于SOA组件化架构-组件化和平台化"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/6Q818XA5FaHd7jJMFBG60w",target:"_blank",rel:"noopener noreferrer"}},[e._v("8. 微信Android模块化架构重构实践"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/Coo123_/article/details/105231799",target:"_blank",rel:"noopener noreferrer"}},[e._v("9. 组件化、插件化面试"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/xiaojinzi123/Component",target:"_blank",rel:"noopener noreferrer"}},[e._v("10. 组件化demo ComponentDemo& WanAndroid&Component"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);