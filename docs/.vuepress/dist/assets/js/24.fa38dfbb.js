(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{384:function(t,a,n){"use strict";n.r(a);var e=n(42),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"优先队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优先队列"}},[t._v("#")]),t._v(" 优先队列")]),t._v(" "),n("p",[t._v("[TOC]")]),t._v(" "),n("h3",{attrs:{id:"一、概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、概念"}},[t._v("#")]),t._v(" 一、概念")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("PriorityQueue优先队列")]),t._v("正常入，按优先级出。")])]),t._v(" "),n("p",[t._v("实现机制：")]),t._v(" "),n("ol",[n("li",[t._v("Heap(Binary(二叉堆，用小顶堆或大顶堆),Binomial,Fibonacci)")]),t._v(" "),n("li",[t._v("Binary Search Tree（二叉搜索树）")])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("ArrayDeque双端队列")]),t._v(" 可以两头进出。")])]),t._v(" "),n("p",[t._v("实现机制：")]),t._v(" "),n("ol",[n("li",[t._v("数组(java默认实现) 2. 链表")])]),t._v(" "),n("p",[t._v("场景：")]),t._v(" "),n("ol",[n("li",[t._v("可以实现普通队列先进先出排序，也可以实现栈先进后出的排序。")]),t._v(" "),n("li",[t._v("可以操作头尾元素。")])]),t._v(" "),n("h3",{attrs:{id:"二、堆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、堆"}},[t._v("#")]),t._v(" 二、堆")]),t._v(" "),n("ol",[n("li",[t._v("概念")])]),t._v(" "),n("p",[t._v("​\t"),n("strong",[t._v("堆(Heap)逻辑结构是一颗完全二叉树，但物理结构是顺序表(一维数组)。同时，此处的堆不要与JAVA内存分配中的堆内存混淆。这里讨论的是数据结构中的堆。")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("实现")]),t._v(" "),n("p",[t._v("数组、二叉堆(大顶堆小顶堆)、红黑树、AVL等。")]),t._v(" "),n("p",[t._v("java中堆实现用的是：斐波拉契堆效率最高、AVL、红黑树实现。")])]),t._v(" "),n("li",[n("p",[t._v("使用场景：")])])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("构建优先队列")])]),t._v(" "),n("li",[n("strong",[t._v("支持排序")])]),t._v(" "),n("li",[n("strong",[t._v("快速找出一个集合中的最小值（或者K或最大值）")])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("Operation")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("find-max")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("delete-max")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("insert")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("increase-key")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("meld")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Binary(二叉堆)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("("),n("em",[t._v("n")]),t._v(")")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Leftist_tree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leftist"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Binomial_heap",target:"_blank",rel:"noopener noreferrer"}},[t._v("Binomial"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-CLRS-9",target:"_blank",rel:"noopener noreferrer"}},[t._v("8]"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-10",target:"_blank",rel:"noopener noreferrer"}},[t._v("9]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-meld-12",target:"_blank",rel:"noopener noreferrer"}},[t._v("c]"),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Fibonacci_heap",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fibonacci"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-CLRS-9",target:"_blank",rel:"noopener noreferrer"}},[t._v("8]"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-Fredman_And_Tarjan-13",target:"_blank",rel:"noopener noreferrer"}},[t._v("10]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Pairing_heap",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pairing"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-Iacono-14",target:"_blank",rel:"noopener noreferrer"}},[t._v("11]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("o")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-pairingdecreasekey-17",target:"_blank",rel:"noopener noreferrer"}},[t._v("d]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Brodal_queue",target:"_blank",rel:"noopener noreferrer"}},[t._v("Brodal"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-18",target:"_blank",rel:"noopener noreferrer"}},[t._v("14]"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-brodal-20",target:"_blank",rel:"noopener noreferrer"}},[t._v("e]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/w/index.php?title=Rank-pairing_heap&action=edit&redlink=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rank-pairing"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-21",target:"_blank",rel:"noopener noreferrer"}},[t._v("16]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Fibonacci_heap",target:"_blank",rel:"noopener noreferrer"}},[t._v("Strict Fibonacci"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-22",target:"_blank",rel:"noopener noreferrer"}},[t._v("17]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/2%E2%80%933_heap",target:"_blank",rel:"noopener noreferrer"}},[t._v("2–3 heap"),n("OutboundLink")],1),t._v("["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-23",target:"_blank",rel:"noopener noreferrer"}},[t._v("18]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("O")]),t._v("(log "),n("em",[t._v("n")]),t._v(")["),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Heap_(data_structure)#cite_note-amortized-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("b]"),n("OutboundLink")],1)]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("Θ")]),t._v("(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("em",[t._v("?")])])])])]),t._v(" "),n("h3",{attrs:{id:"三、习题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、习题"}},[t._v("#")]),t._v(" 三、习题")]),t._v(" "),n("h4",{attrs:{id:"_1-返回数据流中第k大的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-返回数据流中第k大的值"}},[t._v("#")]),t._v(" 1. 返回数据流中第K大的值")]),t._v(" "),n("p",[t._v("[2,4,8,1].....")]),t._v(" "),n("p",[t._v("方法：  1. 每次排序 n*Klogk， 2. Mini Head size等于K，nlogK。 3. 暴力存储最大值下标")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KthLargest")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mK"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriorityQueue")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java默认小顶堆实现")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KthLargest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        mK "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        mP "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriorityQueue")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"_2-滑动窗口最大值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-滑动窗口最大值"}},[t._v("#")]),t._v(" 2. 滑动窗口最大值")]),t._v(" "),n("p",[t._v("方法：1. 双端队列(O1) 2. 优先队列(大顶堆N*logK) 3. 暴力：遍历比较保存最大值index 4.动态规划")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滑动窗口最大值(双端队列实现 1. 维护左边元素是最大值 2.存储下标)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxSlidingWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayDeque")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" arrayDeque "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayDeque")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 初始化队列")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 判断是否移除窗口")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pollFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 入队列，维护左边最大")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLast")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arrayDeque"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);