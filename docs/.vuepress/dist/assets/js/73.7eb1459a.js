(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{431:function(a,t,r){"use strict";r.r(t);var e=r(42),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h2",{attrs:{id:"android-高级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#android-高级"}},[a._v("#")]),a._v(" Android 高级")]),a._v(" "),r("p",[a._v("[TOC]")]),a._v(" "),r("h3",{attrs:{id:"一、概念理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、概念理解"}},[a._v("#")]),a._v(" 一、概念理解")]),a._v(" "),r("h4",{attrs:{id:"_1-响应式编程-react-programming-理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-响应式编程-react-programming-理解"}},[a._v("#")]),a._v(" 1. 响应式编程(react programming)理解")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/c95e29854cb1/",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),r("OutboundLink")],1)]),a._v(" "),r("p",[r("strong",[a._v("Ks题目")])]),a._v(" "),r("p",[a._v("（可多选）关于响应式编程(react programming)描述正确的是：B C\n（A）使用 facebook 开源的 react native 写代码，实现跨平台的方案\n（B）响应式编程是使用异步数据流进行编程\n（C）RxJava就是一种用Java语言实现的响应式编程\n（D）LiveData、ViewModel是实现响应式编程的方案之一")]),a._v(" "),r("p",[r("strong",[a._v("概念")])]),a._v(" "),r("p",[r("strong",[a._v("总结起来，响应式编程（reactive programming）是一种基于数据流（data stream）和变化传递（propagation of change）的声明式（declarative）的编程范式。响应式编程是一种通过异步和数据流来构建事物关系的编程模式。")])]),a._v(" "),r("p",[a._v("响应式编程的“变化传递”就相当于果汁流水线的管道；在入口放进橙子，出来的就是橙汁；放西瓜，出来的就是西瓜汁，橙子和西瓜、以及机器中的果肉果汁以及残渣等，都是流动的“数据流”；管道的图纸是用“声明式”的语言表示的。")]),a._v(" "),r("p",[a._v("这种编程范式如何让Web应用更加“reactive”呢？")]),a._v(" "),r("p",[a._v("我们设想这样一种场景，我们从底层数据库驱动，经过持久层、服务层、MVC层中的model，到用户的前端界面的元素，全部都采用声明式的编程范式，从而搭建一条能够传递变化的管道，这样我们只要更新一下数据库中的数据，用户的界面上就相应的发生变化，岂不美哉？尤其重要的是，一处发生变化，我们不需要各种命令式的调用来传递这种变化，而是由搭建好的“流水线”自动传递。")]),a._v(" "),r("p",[a._v("这种场景用在哪呢？比如一个日志监控系统，我们的前端页面将不再需要通过“命令式”的轮询的方式不断向服务器请求数据然后进行更新，而是在建立好通道之后，数据流从系统源源不断流向页面，从而展现实时的指标变化曲线；再比如一个社交平台，朋友的动态、点赞和留言不是手动刷出来的，而是当后台数据变化的时候自动体现到界面上的。")]),a._v(" "),r("h4",{attrs:{id:"_2-rxjava-livedata思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-rxjava-livedata思考"}},[a._v("#")]),a._v(" 2. Rxjava LiveData思考")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://www.sohu.com/a/279237108_659256",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),r("OutboundLink")],1)]),a._v(" "),r("h4",{attrs:{id:"_3-协程思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-协程思考"}},[a._v("#")]),a._v(" 3. 协程思考")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/zheng199172/article/details/88800275",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),r("OutboundLink")],1)]),a._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/ConstXiong/p/11991459.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("quasar"),r("OutboundLink")],1)]),a._v(" "),r("h3",{attrs:{id:"二、开源项目设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、开源项目设计"}},[a._v("#")]),a._v(" 二、开源项目设计")]),a._v(" "),r("h4",{attrs:{id:"_1-arouter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-arouter"}},[a._v("#")]),a._v(" 1. Arouter")]),a._v(" "),r("h4",{attrs:{id:"_2-retrofit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-retrofit"}},[a._v("#")]),a._v(" 2. Retrofit")])])}),[],!1,null,null,null);t.default=n.exports}}]);