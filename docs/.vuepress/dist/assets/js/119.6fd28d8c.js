(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{489:function(t,a,n){"use strict";n.r(a);var s=n(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"环境安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境安装"}},[t._v("#")]),t._v(" 环境安装")]),t._v(" "),n("h3",{attrs:{id:"conda环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#conda环境"}},[t._v("#")]),t._v(" Conda环境")]),t._v(" "),n("h4",{attrs:{id:"安装conda"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装conda"}},[t._v("#")]),t._v(" 安装Conda")]),t._v(" "),n("blockquote",[n("p",[t._v("Conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。 Conda 是为 Python 程序创建的，适用于 Linux，OS X 和Windows，也可以打包和分发其他软件。")])]),t._v(" "),n("p",[t._v("conda分为anaconda和miniconda。anaconda是包含一些常用包的版本。(这里推荐使用anaconda,大概有600M,但后续用着方便多了)")]),t._v(" "),n("p",[t._v("anaconda官网地址：(https://www.anaconda.com)")]),t._v(" "),n("p",[t._v("下载地址："),n("a",{attrs:{href:"https://repo.anaconda.com/archive/Anaconda3-2019.10-MacOSX-x86_64.pkg",target:"_blank",rel:"noopener noreferrer"}},[t._v("Anaconda 2019.10 for macOS Installer"),n("OutboundLink")],1)]),t._v(" "),n("h4",{attrs:{id:"安装步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[t._v("#")]),t._v(" 安装步骤")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("安装Pkg文件，一路同意即可.")])]),t._v(" "),n("p",[t._v("可视化工具Anaconda-Navigator 可以帮助查看当前环境，依赖包，升级包，安装其他工具如：jupter notebook等。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("常用命令")])])])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# conda 使用")]),t._v("\nconda "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" list \t\t\t\t\t\t\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前环境(*代表当前环境)")]),t._v("\nconda create --name python374 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("python")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.7")]),t._v(".4 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建虚拟环境")]),t._v("\nconda activate python374 \t\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到某环境")]),t._v("\nconda deactivate \t\t\t\t\t\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 退出当前环境")]),t._v("\nconda "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" jupyter notebook\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装notebook")]),t._v("\njupyter notebook\t\t\t\t\t\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动notebook")]),t._v("\nconda remove requests  \t\t\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载第三方包 ")]),t._v("\nconda list                                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看环境包信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 深度学习框架安装")]),t._v("\nconda "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("tensorflow")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v(".0\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tensorflow cpu版本")]),t._v("\nconda "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pytorch torchvision -c pytorch "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pythoch安装(根据官网查看安装命令)")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[n("strong",[t._v("Pycharm环境切换")])]),t._v(" "),n("p",[t._v("菜单栏 > Preferences > Project > Project Interpreter > 选择下来菜单ShowAll > 添加Conda Environment > 选择python374 > Apply.")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("测试")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tensorflow "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" tf\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" torch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭警告")]),t._v("\nos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("environ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TF_CPP_MIN_LOG_LEVEL"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实现一个加法运算")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constant"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constant"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsum1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_shape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# torch numpy 转换")]),t._v("\nnp_data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reshape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntorch_data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_numpy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("np_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntensor2array "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("numpy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\nnumpy array:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" np_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [[0 1 2], [3 4 5]]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\ntorch tensor:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" torch_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  0  1  2 \\n 3  4  5    [torch.LongTensor of size 2x3]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\ntensor to array:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tensor2array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [[0 1 2], [3 4 5]]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);