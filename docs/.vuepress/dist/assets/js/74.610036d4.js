(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{434:function(t,a,s){"use strict";s.r(a);var r=s(42),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"组件化和插件化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化和插件化"}},[t._v("#")]),t._v(" 组件化和插件化")]),t._v(" "),s("p",[t._v("[TOC]")]),t._v(" "),s("h4",{attrs:{id:"_1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[t._v("#")]),t._v(" 1. 概念")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("组件化开发：")])]),t._v(" "),s("p",[t._v("​\t\t就是将一个app分成多个模块，每个模块是一个组件(Module)，开发过程中可以让这些组件相互依赖或单独调用，但是发布的时候需要将所有组件统一合并成一个apk，这就是组件化开发。")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("插件化开发：")])]),t._v(" "),s("p",[t._v("​\t\t它和组件化开发略有不同，它将整个app拆分成多个模块，这个模块包括一个宿主和多个插件，每个模块都是一个apk(组件化每个模块是一个lib)，最终打包时将宿主apk和插件apk分开或联合打包。")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("区别：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. \t都是分模块思想，解耦。\n2. \t组件化模块都是lib，插件化模块都是apk。\n3. \t插件化支持动态插拔模块，组件化不支持。\n")])])]),s("h4",{attrs:{id:"_2-组件化流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件化流程"}},[t._v("#")]),t._v(" 2. 组件化流程")]),t._v(" "),s("h5",{attrs:{id:"_1-拆分组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-拆分组件"}},[t._v("#")]),t._v(" 1. 拆分组件")]),t._v(" "),s("h5",{attrs:{id:"_2-处理组件间交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-处理组件间交互"}},[t._v("#")]),t._v(" 2. 处理组件间交互")])])}),[],!1,null,null,null);a.default=_.exports}}]);