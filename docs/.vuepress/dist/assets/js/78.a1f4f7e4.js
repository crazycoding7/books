(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{438:function(t,_,e){"use strict";e.r(_);var v=e(42),r=Object(v.a)({},(function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h4",{attrs:{id:"移动端架构的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端架构的理解"}},[t._v("#")]),t._v(" 移动端架构的理解")]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("h2",{attrs:{id:"一、架构设计原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、架构设计原则"}},[t._v("#")]),t._v(" 一、架构设计原则")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("整体原则")])]),t._v(" "),e("p",[t._v("架构服务于业务，以提升业务效率和体验为目标。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("业务原则")])]),t._v(" "),e("ol",[e("li",[t._v("稳定性和可维护性；")]),t._v(" "),e("li",[t._v("与业务形态和组件架构契合；")]),t._v(" "),e("li",[t._v("成本可控(切记憋大招，多次小规模架构演进达到目标)；")])])])]),t._v(" "),e("h2",{attrs:{id:"二、app架构的关注点有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、app架构的关注点有哪些"}},[t._v("#")]),t._v(" 二、APP架构的关注点有哪些？")]),t._v(" "),e("p",[t._v("​\t业界有一些做得比较好的产品，也是我们参考的对象，毕竟技术领域尽量要避免重复造轮子。像微信、支付宝、美团等超级 App 的架构演进我们也会去学习了解，吸取别人的经验。")]),t._v(" "),e("p",[t._v("关注点这里，会关注("),e("strong",[t._v("组件化、插件化、动态迭代、代码多端复用")]),t._v(")：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("模块 / 组件划分、分层的策略和维度；")])]),t._v(" "),e("li",[e("p",[t._v("模块 / 组件间通信方案；")])]),t._v(" "),e("li",[e("p",[t._v("架构演进中遇到的问题；")])]),t._v(" "),e("li",[e("p",[t._v("架构演进过程中使用的工具；")])]),t._v(" "),e("li",[e("p",[t._v("防劣化机制；")])]),t._v(" "),e("li",[e("p",[t._v("架构演进和业务迭代的合作模式；")])]),t._v(" "),e("li",[e("p",[t._v("后续架构演进的方向。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"images/andorid_module_des.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"二、模块之间通信方式有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、模块之间通信方式有哪些"}},[t._v("#")]),t._v(" 二、模块之间通信方式有哪些？")]),t._v(" "),e("ul",[e("li",[t._v("参考")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/e_QmHNOOhplKzIz1MXn08g",target:"_blank",rel:"noopener noreferrer"}},[t._v("1. 头条"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/weixin_30359021/article/details/95141665",target:"_blank",rel:"noopener noreferrer"}},[t._v("2. 组件和模块区别"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.liyisite.com/article/12/android-xiang-mu-mo-kuai-hua-zu-jian-hua-de-jia-gou-zhi-lu-yi/",target:"_blank",rel:"noopener noreferrer"}},[t._v("3. 文章"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA%3D%3D&mid=2650662653&idx=1&sn=e15a36e4460eb3d1890d92aa921c0962&scene=45#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("4. 安居客架构演进"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU4ODM2MjczNA==&mid=2247483732&idx=1&sn=b7ee1151b2c8ad2e997b8db39adf3267&chksm=fddca7d5caab2ec33905cc3350f31c0c98794774b0d04a01845565e3989b1f20205c7f432cb9&scene=38#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("5. 安居客模块化组件化"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("对比:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类别")]),t._v(" "),e("th",[t._v("目的")]),t._v(" "),e("th",[t._v("特点")]),t._v(" "),e("th",[t._v("接口")]),t._v(" "),e("th",[t._v("成果")]),t._v(" "),e("th",[t._v("架构定位")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("组件")]),t._v(" "),e("td",[t._v("重用、解耦")]),t._v(" "),e("td",[t._v("高重用、松耦合")]),t._v(" "),e("td",[t._v("无统一接口")]),t._v(" "),e("td",[t._v("基础库、基础组件")]),t._v(" "),e("td",[t._v("纵向分层")])]),t._v(" "),e("tr",[e("td",[t._v("模块")]),t._v(" "),e("td",[t._v("隔离/封装")]),t._v(" "),e("td",[t._v("高内聚、松耦合")]),t._v(" "),e("td",[t._v("统一接口")]),t._v(" "),e("td",[t._v("业务框架、业务模块")]),t._v(" "),e("td",[t._v("横向分块")])])])]),t._v(" "),e("p",[t._v("说明:")]),t._v(" "),e("p",[t._v("组件：最初的目的是代码重用，功能相对单一或者独立。在整个系统的代码层次上位于最底层，被其他代码所依赖，所以说组件化是纵向分层。\n模块：最初的目的是将同一类型的代码整合在一起，所以模块的功能相对复杂，但都同属于一个业务。不同模块之间也会存在依赖关系，但大部分都是业务性的互相跳转，从地位上来说它们都是平级的。")])])}),[],!1,null,null,null);_.default=r.exports}}]);